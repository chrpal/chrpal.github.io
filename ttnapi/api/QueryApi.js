/**
 * The Things Network Data Storage
 * Stores data and makes it available using a REST API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@thethingsindustries.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Data'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Data'));
  } else {
    // Browser globals (root is window)
    if (!root.TheThingsNetworkDataStorage) {
      root.TheThingsNetworkDataStorage = {};
    }
    root.TheThingsNetworkDataStorage.QueryApi = factory(root.TheThingsNetworkDataStorage.ApiClient, root.TheThingsNetworkDataStorage.Data);
  }
}(this, function(ApiClient, Data) {
  'use strict';

  /**
   * Query service.
   * @module api/QueryApi
   * @version 2.0.0
   */

  /**
   * Constructs a new QueryApi. 
   * @alias module:api/QueryApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the apiV2QueryGet operation.
     * @callback module:api/QueryApi~apiV2QueryGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Data>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query data
     * Query the data for all devices 
     * @param {Object} opts Optional parameters
     * @param {String} opts.last Duration on which we want to get the data (default 1h). Pass 30s for the last 30 seconds, 1h for the last hour, 2d for the last 48 hours, etc 
     * @param {module:api/QueryApi~apiV2QueryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Data>}
     */
    this.apiV2QueryGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'last': opts['last'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [Data];

      return this.apiClient.callApi(
        '/api/v2/query', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
