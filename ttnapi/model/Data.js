/**
 * The Things Network Data Storage
 * Stores data and makes it available using a REST API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@thethingsindustries.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ttnapi/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TheThingsNetworkDataStorage) {
      root.TheThingsNetworkDataStorage = {};
    }
    root.TheThingsNetworkDataStorage.Data = factory(root.TheThingsNetworkDataStorage.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Data model module.
   * @module model/Data
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>Data</code>.
   * @alias module:model/Data
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Data} obj Optional instance to populate.
   * @return {module:model/Data} The populated <code>Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('device_id')) {
        obj['device_id'] = ApiClient.convertToType(data['device_id'], 'String');
      }
      if (data.hasOwnProperty('raw')) {
        obj['raw'] = ApiClient.convertToType(data['raw'], 'Blob');
      }
      if (data.hasOwnProperty('time')) {
        obj['time'] = ApiClient.convertToType(data['time'], 'String');
      }
      if (data.hasOwnProperty('field1')) {
        obj['field1'] = ApiClient.convertToType(data['field1'], 'String');
      }
      if (data.hasOwnProperty('field2')) {
        obj['field2'] = ApiClient.convertToType(data['field2'], 'String');
      }
    }
    return obj;
  }

  /**
   * Unique identifier representing the device ID
   * @member {String} device_id
   */
  exports.prototype['device_id'] = undefined;
  /**
   * Base64 encoded payload
   * @member {Blob} raw
   */
  exports.prototype['raw'] = undefined;
  /**
   * The timestamp of the data
   * @member {String} time
   */
  exports.prototype['time'] = undefined;
  /**
   * Value1
   * @member {String} field1
   */
  exports.prototype['field1'] = undefined;
  /**
   * Value2
   * @member {String} field2
   */
  exports.prototype['field2'] = undefined;



  return exports;
}));


